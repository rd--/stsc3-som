CharacterTest = ClassTestCase (

testCharacterSeparators = (
	| result |
	result := '/', Character separators.
	self assert: result size = (Character separators size + 1).
	result := '/', CharacterSet separators.
	self assert: result size = (CharacterSet separators asArray size + 1).
)

testCodePoint = (
	self assert: (Character codePoint: $A asciiValue) = $A.
	self assert: (Character codePoint: 500) asciiValue = 500.
)

testDigitValue = (
	self assert: $0 = (Character digitValue: 0).
	self assert: $1 = (Character digitValue: 1).
	self assert: $9 = (Character digitValue: 9).
	self assert: $A = (Character digitValue: 10).
	self assert: $B = (Character digitValue: 11).
	self assert: $F = (Character digitValue: 15).
	self assert: $G = (Character digitValue: 16).
	self assert: $P = (Character digitValue: 25).
	self assert: $Z = (Character digitValue: 35).
)

testPrintString = (
	self assert: $a printString = '$a'.
	self assert: $5 printString = '$5'.
	self assert: $@ printString = '$@'.
	self assert: Character cr printString = 'Character cr'.
	self assert: Character lf printString = 'Character lf'.
	self assert: Character space printString = 'Character space'.
	self assert: Character null printString = 'Character null'.
	self assert: (Character value: 17) printString = 'Character value: 17'.
)

testStoreString = (
	self assert: $a storeString = '$a'.
	self assert: $5 storeString = '$5'.
	self assert: $@ storeString = '$@'.
	self assert: Character cr storeString = 'Character cr'.
	self assert: Character lf storeString = 'Character lf'.
	self assert: Character space storeString = 'Character space'.
	self assert: Character null storeString = 'Character null'.
	self assert: (Character value: 17) storeString = '(Character value: 17)'.
)

)
