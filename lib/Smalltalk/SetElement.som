SetElement = Object (

| enclosedElement |

enclosedSetElement = (
	^ enclosedElement
)

enclosedSetElement: anObject = (
	enclosedElement := anObject
)

= anObject = (
	^ anObject class = self class and: [ enclosedElement = anObject enclosedSetElement ]
)

hash = (
	^ enclosedElement hash
)

asSetElement = (
	"A receiver has to be included into a set, as a distinct object.
	We need to wrap receiver in own turn, otherwise #enclosedSetElement will return wrong object for that set"
	^ SetElement with: self
)

----------------------------

| NilElement |

withNil = (
	^NilElement ifNil: [ NilElement := self with: nil ].
)

with: anObject = (
	^ self new enclosedSetElement: anObject
)

)
