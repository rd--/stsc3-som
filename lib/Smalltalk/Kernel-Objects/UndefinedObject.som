UndefinedObject = Object (

addDependent: ignored = (
	"Refer to the comment in Object|dependents."
	self error: 'Nil should not have dependents'
)

asString = (
	^'nil'
)

asSetElement = (
	"Since nil is a singleton, we need only a single wrapper instance to represent it in set,
	created in advance"
	^ SetElement withNil
)

deepCopy = (
	"Only one instance of UndefinedObject should ever be made, so answer
	with self."
)

haltIfNil = (
	self halt
)

handleSignal: exception = (
	"When no more handler (on:do:) context left in sender chain this gets called.  Return from signal with default action."
	^ exception resumeUnchecked: exception defaultAction
)

isEmptyOrNil = (
	^ true
)

isLiteral = (
	^ true
)

isNil = (
	^true
)

jsonWriteOn: aWriteStream = (
	aWriteStream nextPutAll: 'null'
)

notNil = (
	^false
)

ifNil: aBlock = (
	^aBlock value
)

ifNotNil: ignoredBlock = (
	^self
)

ifNil: aBlock ifNotNil: ignoredBlock = (
	^aBlock value
)

ifNotNil: ifNotNilBlock ifNil: nilBlock = (
	"If I got here, I am nil, so evaluate the block nilBlock"
	^ nilBlock value
)

notNil = (
	"Refer to the comment in Object|notNil."
	^false
)

printAsLiteralOn: aStream = (
	^self printOn: aStream
)

printOn: aStream = (
	aStream nextPutAll: 'nil'
)

shallowCopy = (
)

storeOn: aStream = (
	"Refer to the comment in Object|storeOn:."
	aStream nextPutAll: 'nil'
)

----

initializedInstance = (
	^ nil
)

)
