SmalltalkImage = Object (

    "Accessing"
    global: name            = primitive
    global: name put: value = primitive
    hasGlobal: name         = primitive

    "Initializing"
    initialize: arguments = (
        | application |

        "Make sure we have got at least one argument"
        (arguments size < 1) ifTrue: [ 'No class specified' println. ^nil ].

        "Load the class with the specified name, create an instance of it, and
         run it. If there is more than only the class given on the command line,
         and the class has a method #run:, the arguments array is passed to it,
         otherwise, #run is sent."
        application := (self resolve: (arguments at: 1) asSymbol) new.

        ^ (application respondsTo: #run:)
            ifTrue:  [ application run: arguments ]
            ifFalse: [ application run ]
    )

    "File support"

    "Load a file identified by a path. Return content as a string"
    loadFile: fileName = primitive

    "Loading and resolving"
    load:    symbol = primitive
    resolve: symbol = (
        | class |

        "Check if we've already got the global"
        (self global: symbol) == nil ifFalse: [ ^self global: symbol ].

        "Try loading the class"
        class := self load: symbol.
        (class == nil) ifFalse: [
            ^class ].
        self error: 'Tried loading <<' , symbol , '>> as a class, but failed.' "quote..."
    )

    "Exiting"
    exit: error  = primitive
    exit         = ( self exit: 0 )

    "Printing"
    printString: string = primitive
    printNewline        = primitive

    errorPrintln = ( self errorPrintln: '' )
    errorPrintln: string = primitive
    errorPrint: string  = primitive

    printStackTrace = primitive

    "Time"
    time  = primitive
    ticks = primitive      "returns the microseconds since start"

    "Force Garbage Collection"
    fullGC = primitive
    
    "To be implemented by SOM implementations that gather such statistics."
    gcStats = ( ^ #(
        0 "Total number of GCs"
        0 "Estimated total GC time in milliseconds") )  
    totalCompilationTime = ( ^ 0 "Estimated total compilation time in milliseconds" )

    ----------------------------------

    "Allocation"
    new = ( self error: 'The SmalltalkImage object is singular' )

)
