Float = Number (

abs = (
	^(self < 0.0) ifTrue: [ ^0.0 - self ] ifFalse: [ ^self ]
)

cos = (
	^ (self + Float halfPi) sin
)

degreesToRadians = (
	^self * Float radiansPerDegree
)

hash = (
	(self isFinite and: [self fractionPart = 0.0]) ifTrue: [^self truncated hash].
	^self identityHash
)

integerPart = (
	^self - self fractionPart
)

isFinite = (
	^(self - self) = 0.0
)

isFloat = (
	^true
)

isLiteral = (
	^true
)

isPowerOfTwo = (
	^false
)

log = (
	^ self ln / Float ln10
)

log2 = (
	^ self significand ln / Float ln2 + self exponent
)

negated = (
	^-1.0 * self
)

printAsLiteralOn: aStream = (
	^self storeOn: aStream
)

radiansToDegrees = (
	^self / Float radiansPerDegree
)

reciprocal = (
	^1.0 / self
)

rounded = (
	self fractionPart abs < 0.5
		ifTrue: [^self truncated]
		ifFalse: [^self truncated + self sign rounded]
)

significand = (
	^ self timesTwoPower: (self exponent negated)
)

tan = (
	^ self sin / self cos
)

----

e = (
	^ 2.718281828459045235360287471353
)

epsilon = (
	^ 0.000000000001
)

halfPi = (
	^  Float pi / 2
)

infinity = (
	^ 1.0 / 0.0
)

ln2 = (
	^ 0.69314718055994530941723212145817657
)

ln10 = (
	^10.0 ln
)

nan = (
	^ 0.0 / 0.0
)

one = (
	^ 1.0
)

pi = (
	^  3.14159265358979323846264338327950288
)

radiansPerDegree = (
	^ Float pi / 180.0
)

sqrt2 = (
	^ 1.41421356237309504880168872420969808
)

threePi = (
	^ Float pi * 3.0
)

twoPi = (
	^ Float pi * 2.0
)

zero = (
	^ 0.0
)

)
