Integer = Number (

asInteger = (
	^self
)

bitInvert = (
	^ -1 - self
)

isInteger = (
	^ true
)

rounded = (
)

timesRepeat: aBlock = (
	| remaining |
	remaining := self.
	[ (remaining := remaining - 1) >= 0 ] whileTrue: [
		aBlock value ]
)

----

new = (
	self == Integer ifTrue: [^ self error: 'Integer is an abstract class.  Make a concrete subclass.'].
	^ super new
)

)
