OhmParsingExpressionNotTest = OhmParsingExpressionTest (
testCreateANot = (

	OhmPExprNot newOn: OhmParsingExpression new.
)

testNotArity = (

	self assert: 0 equals: (OhmPExprNot newOn: OhmParsingExpression new) arity.
	self assert: 0 equals: (OhmPExprNot newOn: (OhmPExprString newOn: 'a')) arity.
)

testNotCreatesNoNodes = (

	| notExpression |
	notExpression := OhmPExprSeq newOn: { OhmPExprNot newOn: (OhmPExprString newOn: 'hello') . OhmPExprString newOn: 'bar'}.
 	self
		assertParsingExpression: notExpression
		compliesWithNodeFixture: #matchTree
		fromFixtureSet: OhmPExprNot expressionName.
)

testNotMatchesAndDoesNotMove = (

	| notExpression |
	notExpression := OhmPExprNot newOn: (OhmPExprString newOn: 'hello').
	self
		assertParsingExpression: notExpression
		compliesWithItsFixture: #expressionMatch.
)

testNotStillMaintainsTheInterval = (

	| notExpression |
	notExpression := OhmPExprNot newOn: (OhmPExprString newOn: 'hello').
	self
		assertParsingExpression: notExpression
		compliesWithItsIntervalFixture: #matchInterval.
)


)
